#include<bits/stdc++.h>
using namespace std;
using ll = long long;

int binary_find(int *a,int start,int en,int num){
    if(en>=start){
        int mid = (start + en ) /2;
        if(a[mid]==num){
            return mid + 1;
        }
        else if(a[mid]>num){
            en = mid - 1;
            return binary_find( a,start,en, num);
        }
        else{
            start = mid + 1;
            return binary_find( a,start, en, num);
        }
    }
    return -1;
}

int find_pivot(int *a,int s,int e,int n){
    if(s<=e){
        int mid = (s + e)/2;
        if(mid+1 < n && a[mid+1]<=a[mid]){
            return mid;
        }
        else if(mid-1>-1 && a[mid - 1] > a[mid]){
            return mid -1;
        }
        else if(a[mid]<=a[s]){
            e = mid - 1;
            return find_pivot(a,s,e,n);
        }
        else {
            s = mid + 1;
            return find_pivot(a,s,e,n);
        }
    }
    return -1;
}

int main(){
    int t;cin>>t;
    while(t--){
        int n;cin>>n;
        int a[n];
        for(int i=0;i<n;i++){
            cin>>a[i];
        }
        int num = 3;
        //cout<<binary_find(a,0,n,num)<<endl;
        int pivot = find_pivot(a,0,n,n);
        int ans = binary_find(a,0,pivot,4);
        if(ans==-1){
            cout<<binary_find(a,pivot,n,4)<<endl;
        }
        else cout<<ans<<endl;
    }
}
