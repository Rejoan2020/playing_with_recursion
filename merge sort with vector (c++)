#include <iostream>
#include<vector>
using namespace std;

vector<int> merge_l_r(vector<int> l,vector<int>r){
    int i=0,j=0;
    vector<int> mix;
    while(i<l.size() && j<r.size()){
        if(l[i]<r[j]){
            mix.push_back(l[i]);
            i++;
        }
        else{
            mix.push_back(r[j]);
            j++;
        }
    }
    if(i<l.size()){
        for(int it=i;it<l.size();it++){
            mix.push_back(l[it]);
        }
    }
    if(j<r.size()){
        for(int it=j;it<r.size();it++){
            mix.push_back(r[it]);
        }
    }
    return mix;
}

vector<int> copyy(vector<int> b,int s,int f){
    vector<int> ar;

    for(int i=s;i<f;i++){
        ar.push_back(b[i]);
    }
    return ar;
}

vector<int> func(vector<int> b){
    if(b.size()==1){
        return b;
    }
    int mid = b.size()/2;

    //cout<<mid<<endl;

    vector<int> l = func(copyy(b,0,mid));
    vector<int> r = func(copyy(b,mid,b.size()));

    return merge_l_r(l,r);
}

int main()
{
    vector<int> a;
    a.push_back(3);
    a.push_back(1);
    a.push_back(4);
    a.push_back(2);
    a.push_back(5);
    for(int i=0;i<a.size();i++){
        cout<<a[i]<<" ";
    }
    cout<<endl;
    vector<int> s_ar = func(a);

    for(int i=0;i<s_ar.size();i++){
        cout<<s_ar[i]<<" ";
    }
    cout<<endl;
    return 0;
}
